@using Microsoft.AspNetCore.Identity
@using HKQTravellingAuthenication.Models
@using Microsoft.AspNetCore.Mvc.ViewEngines

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@inject ICompositeViewEngine Engine

@{
    var userName = UserManager.GetUserName(User);
    var displayedName = "";
    if (userName != null)
    {
        displayedName = userName.Length > 7 ? $"{userName.Substring(0, 7)}..." : userName;
    }
}

<style>
    .sidebar {
        position: relative;
            top: 0;
            left: 0;
            width: 250px;
            background-color: #1D8348;
    }
    .sidebar a {
            padding: 10px 15px;
            display: block;
            color: #000000;
        }
        /* Hover effect for links in the sidebar */
        .sidebar a:hover {
            background-color: #495057;
            text-decoration: none;
        }
        /* Content wrapper */
        .content-wrapper {
            margin-left: 250px; /* Adjust this value based on sidebar width */
            padding: 15px;
        }
</style>

@if (User.Identity.IsAuthenticated)
{
    var user = await UserManager.GetUserAsync(User);
    if (await UserManager.IsInRoleAsync(user, "Administrator"))
    {
        @* <!-- Sidebar for Administrator --> *@
        <div class="sidebar col-md-3">
            <nav class="nav flex-column">
                @* <!-- Other sidebar items --> *@
                <div class="nav-item dropdown">
                    <a href="#" class="nav-link dropdown-toggle" data-toggle="dropdown">Pages</a>
                    <div class="dropdown-menu border-0 rounded-0 m-0">
                        @foreach (var menuItem in GetAdminMenuItems()) //Replace GetAdminMenuItems() with your logic to retrieve menu items
                        {
                            <a href="@menuItem.Url" class="dropdown-item">@menuItem.Label</a>
                        }
                    </div>
                </div>
            </nav>
        </div>
    }
    else
    {
        @* <!-- Sidebar for authenticated users who are not administrators --> *@
        <div class="sidebar" style="display: none;">
            @* <!-- You can customize this message for non-admin users --> *@
            <p>You do not have access to this sidebar.</p>
        </div>
    }
}
else
{
    @* <!-- Sidebar for guests or unauthenticated users --> *@
    <div class="sidebar" style="display: none;">
        @* <!-- You can customize this message for guests --> *@
        <p>You are not logged in.</p>
    </div>
}

@functions {
    public List<MenuItem> GetAdminMenuItems()
    {
        // Replace this with your logic to retrieve menu items for administrators
        List<MenuItem> adminMenu = new List<MenuItem>
        {
            new MenuItem { Label = "Database", Url = Url.Action("Index", "DbManage", new { Area = "Database" }) },
            new MenuItem { Label = "Quản lý Liên hệ", Url = Url.Action("Index", "Contact", new { Area = "Contact" }) },
            new MenuItem { Label = "Quản lý role (vai trò)", Url = Url.Action("Index", "Role", new { Area = "Identity" }) },
            new MenuItem { Label = "Quản lý thành viên", Url = Url.Action("Index", "User", new { Area = "Identity" }) },
            new MenuItem { Label = "Quản lý chuyên mục", Url = Url.Action("Index", "Category", new { Area = "Blog" }) },
            new MenuItem { Label = "Quản lý thư mục (files)", Url = Url.Action("Index", "FileManager", new { Area = "Files" }) }
        };

        return adminMenu;
    }

    public class MenuItem
    {
        public string Label { get; set; }
        public string Url { get; set; }
    }
}